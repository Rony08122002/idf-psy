import React from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Heart, MessageCircle, Calendar, Award } from "lucide-react";

export default function QuickStats({ conversations }) {
  const getAverageMood = () => {
    const moodScores = conversations
      .filter(conv => conv.mood_assessment?.mood_score)
      .map(conv => conv.mood_assessment.mood_score);
    
    if (moodScores.length === 0) return 0;
    return (moodScores.reduce((sum, score) => sum + score, 0) / moodScores.length).toFixed(1);
  };

  const getStreakDays = () => {
    // Simple streak calculation - count recent days with conversations
    const today = new Date();
    let streak = 0;
    
    for (let i = 0; i < 30; i++) {
      const checkDate = new Date(today - i * 24 * 60 * 60 * 1000);
      const hasConversation = conversations.some(conv => {
        const convDate = new Date(conv.created_date);
        return convDate.toDateString() === checkDate.toDateString();
      });
      
      if (hasConversation) {
        streak++;
      } else if (i === 0) {
        break; // If today has no conversation, streak is 0
      } else {
        break; // First gap breaks the streak
      }
    }
    
    return streak;
  };

  const stats = [
    {
      title: "סה\"כ צ'ק-אינים",
      value: conversations.length,
      icon: MessageCircle,
      color: "text-blue-600",
      bgColor: "bg-blue-100"
    },
    {
      title: "מצב רוח ממוצע",
      value: `${getAverageMood()}/10`,
      icon: Heart,
      color: "text-red-600", 
      bgColor: "bg-red-100"
    },
    {
      title: "רצף נוכחי",
      value: `${getStreakDays()} ימים`,
      icon: Award,
      color: "text-green-600",
      bgColor: "bg-green-100"
    },
    {
      title: "השבוע",
      value: conversations.filter(conv => {
        const weekAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);
        return new Date(conv.created_date) > weekAgo;
      }).length,
      icon: Calendar,
      color: "text-purple-600",
      bgColor: "bg-purple-100"
    }
  ];

  return (
    <div className="space-y-4">
      {stats.map((stat, index) => (
        <Card key={index} className="border-none shadow-lg bg-white/90 backdrop-blur-sm">
          <CardContent className="p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-gray-600">{stat.title}</p>
                <p className="text-2xl font-bold text-gray-900 mt-1">{stat.value}</p>
              </div>
              <div className={`p-3 rounded-full ${stat.bgColor}`}>
                <stat.icon className={`w-6 h-6 ${stat.color}`} />
              </div>
            </div>
          </CardContent>
        </Card>
      ))}
      
      {/* Motivational Card */}
      <Card className="border-none shadow-lg bg-gradient-to-r from-green-500 to-blue-500 text-white">
        <CardContent className="p-6 text-center">
          <Heart className="w-8 h-8 mx-auto mb-3" />
          <h3 className="font-bold mb-2">אתה לא לבד</h3>
          <p className="text-sm opacity-90">
            כל שיחה היא צעד לקראת בריאות נפש טובה יותר. תמשיך כך!
          </p>
        </CardContent>
      </Card>
    </div>
  );
}