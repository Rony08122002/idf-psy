import React, { useState, useEffect } from "react";
import { User } from "@/entities/User";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Switch } from "@/components/ui/switch";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Badge } from "@/components/ui/badge";
import { 
  Settings as SettingsIcon, 
  Shield, 
  Bell, 
  Globe, 
  User as UserIcon,
  Save,
  Lock
} from "lucide-react";

export default function Settings() {
  const [user, setUser] = useState(null);
  const [settings, setSettings] = useState({
    preferred_language: 'hebrew',
    avatar_preference: 'male',
    notification_preferences: {
      daily_checkin: true,
      checkin_time: '08:00'
    },
    mental_health_officer: '',
    service_branch: '',
    unit: '',
    rank: '',
    service_type: '',
    privacy_settings: {
      allow_reports: false,
      data_retention_days: 30
    }
  });
  const [isLoading, setIsLoading] = useState(true);
  const [isSaving, setIsSaving] = useState(false);

  useEffect(() => {
    loadUserSettings();
  }, []);

  const loadUserSettings = async () => {
    try {
      const currentUser = await User.me();
      setUser(currentUser);
      
      // Merge user data with default settings
      setSettings(prev => ({
        ...prev,
        ...currentUser,
        notification_preferences: {
          ...prev.notification_preferences,
          ...currentUser.notification_preferences
        },
        privacy_settings: {
          ...prev.privacy_settings,
          ...currentUser.privacy_settings
        }
      }));
      
    } catch (error) {
      console.error("Error loading settings:", error);
    } finally {
      setIsLoading(false);
    }
  };

  const handleSaveSettings = async () => {
    setIsSaving(true);
    try {
      await User.updateMyUserData(settings);
      // Show success feedback here if needed
    } catch (error) {
      console.error("Error saving settings:", error);
    } finally {
      setIsSaving(false);
    }
  };

  const handleSettingChange = (key, value) => {
    setSettings(prev => ({
      ...prev,
      [key]: value
    }));
  };

  const handleNestedSettingChange = (parentKey, childKey, value) => {
    setSettings(prev => ({
      ...prev,
      [parentKey]: {
        ...prev[parentKey],
        [childKey]: value
      }
    }));
  };

  if (isLoading) {
    return (
      <div className="flex items-center justify-center h-screen">
        <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 p-4 md:p-8" dir="rtl">
      <div className="max-w-4xl mx-auto space-y-8">
        
        {/* Header */}
        <div className="text-center mb-8">
          <h1 className="text-3xl font-bold text-gray-900 mb-2">הגדרות</h1>
          <p className="text-gray-600">
            התאם את חוויית מגן נפש שלך והעדפות הפרטיות
          </p>
        </div>

        {/* User Profile */}
        <Card className="border-none shadow-xl bg-white/90 backdrop-blur-sm">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <UserIcon className="w-5 h-5 text-blue-600" />
              פרטים אישיים
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-6">
            <div className="grid md:grid-cols-2 gap-6">
              <div>
                <Label htmlFor="full_name">שם מלא</Label>
                <Input
                  id="full_name"
                  value={user?.full_name || ''}
                  disabled
                  className="bg-gray-50"
                />
                <p className="text-xs text-gray-500 mt-1">
                  השם לא ניתן לשינוי. פנה למנהל במקרה הצורך.
                </p>
              </div>
              <div>
                <Label htmlFor="email">אימייל</Label>
                <Input
                  id="email"
                  value={user?.email || ''}
                  disabled
                  className="bg-gray-50"
                />
                <p className="text-xs text-gray-500 mt-1">
                  האימייל מנוהל על ידי הארגון שלך
                </p>
              </div>
              <div>
                <Label htmlFor="service_branch">זרוע בצה"ל</Label>
                <Select
                  value={settings.service_branch}
                  onValueChange={(value) => handleSettingChange('service_branch', value)}
                >
                  <SelectTrigger>
                    <SelectValue placeholder="בחר את הזרוע שלך" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="ground_forces">כוחות יבשה</SelectItem>
                    <SelectItem value="air_force">חיל האוויר</SelectItem>
                    <SelectItem value="navy">חיל הים</SelectItem>
                    <SelectItem value="intelligence">אמ"ן</SelectItem>
                    <SelectItem value="technology">תקשוב</SelectItem>
                    <SelectItem value="logistics">אג"ם</SelectItem>
                    <SelectItem value="reserves">מילואים</SelectItem>
                  </SelectContent>
                </Select>
              </div>
              <div>
                <Label htmlFor="service_type">סוג שירות</Label>
                <Select
                  value={settings.service_type}
                  onValueChange={(value) => handleSettingChange('service_type', value)}
                >
                  <SelectTrigger>
                    <SelectValue placeholder="בחר סוג השירות" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="mandatory">שירות חובה</SelectItem>
                    <SelectItem value="professional">שירות קבע</SelectItem>
                    <SelectItem value="reserves">מילואים</SelectItem>
                  </SelectContent>
                </Select>
              </div>
              <div>
                <Label htmlFor="rank">דרגה</Label>
                <Input
                  id="rank"
                  placeholder="הדרגה שלך"
                  value={settings.rank || ''}
                  onChange={(e) => handleSettingChange('rank', e.target.value)}
                />
              </div>
              <div>
                <Label htmlFor="unit">יחידה</Label>
                <Input
                  id="unit"
                  placeholder="היחידה שלך"
                  value={settings.unit || ''}
                  onChange={(e) => handleSettingChange('unit', e.target.value)}
                />
              </div>
            </div>
            <div>
              <Label htmlFor="mho">קצין רווחה</Label>
              <Input
                id="mho"
                placeholder="פרטי הקשר לקצין רווחה"
                value={settings.mental_health_officer}
                onChange={(e) => handleSettingChange('mental_health_officer', e.target.value)}
              />
            </div>
          </CardContent>
        </Card>

        {/* Preferences */}
        <Card className="border-none shadow-xl bg-white/90 backdrop-blur-sm">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <Globe className="w-5 h-5 text-green-600" />
              העדפות שפה ואווטאר
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-6">
            <div className="grid md:grid-cols-2 gap-6">
              <div>
                <Label htmlFor="language">שפה מועדפת</Label>
                <Select
                  value={settings.preferred_language}
                  onValueChange={(value) => handleSettingChange('preferred_language', value)}
                >
                  <SelectTrigger>
                    <SelectValue placeholder="בחר שפה" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="hebrew">עברית</SelectItem>
                    <SelectItem value="english">English</SelectItem>
                    <SelectItem value="russian">Русский</SelectItem>
                    <SelectItem value="amharic">አማርኛ</SelectItem>
                    <SelectItem value="arabic">العربية</SelectItem>
                  </SelectContent>
                </Select>
              </div>
              <div>
                <Label htmlFor="avatar">אווטאר הבינה המלאכותית</Label>
                <Select
                  value={settings.avatar_preference}
                  onValueChange={(value) => handleSettingChange('avatar_preference', value)}
                >
                  <SelectTrigger>
                    <SelectValue placeholder="בחר אווטאר" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="male">מלווה גברי (אלכס)</SelectItem>
                    <SelectItem value="female">מלווה נקבי (שרה)</SelectItem>
                  </SelectContent>
                </Select>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Notifications */}
        <Card className="border-none shadow-xl bg-white/90 backdrop-blur-sm">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <Bell className="w-5 h-5 text-orange-600" />
              הגדרות התראות
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-6">
            <div className="flex items-center justify-between">
              <div>
                <Label htmlFor="daily-checkin">תזכורות צ'ק-אין יומי</Label>
                <p className="text-sm text-gray-500">קבל תזכורת להשלים את הצ'ק-אין היומי לבריאות הנפש</p>
              </div>
              <Switch
                id="daily-checkin"
                checked={settings.notification_preferences.daily_checkin}
                onCheckedChange={(checked) => handleNestedSettingChange('notification_preferences', 'daily_checkin', checked)}
              />
            </div>
            
            {settings.notification_preferences.daily_checkin && (
              <div>
                <Label htmlFor="checkin-time">שעת צ'ק-אין</Label>
                <Input
                  id="checkin-time"
                  type="time"
                  value={settings.notification_preferences.checkin_time}
                  onChange={(e) => handleNestedSettingChange('notification_preferences', 'checkin_time', e.target.value)}
                  className="max-w-32"
                />
              </div>
            )}
          </CardContent>
        </Card>

        {/* Privacy & Security */}
        <Card className="border-none shadow-xl bg-white/90 backdrop-blur-sm">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <Shield className="w-5 h-5 text-purple-600" />
              פרטיות ואבטחה
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-6">
            <div className="flex items-center justify-between">
              <div>
                <Label htmlFor="allow-reports">אפשר שיתוף דוחות</Label>
                <p className="text-sm text-gray-500">
                  אפשר שיתוף דוחות הערכה עם קציני רווחה
                </p>
              </div>
              <Switch
                id="allow-reports"
                checked={settings.privacy_settings.allow_reports}
                onCheckedChange={(checked) => handleNestedSettingChange('privacy_settings', 'allow_reports', checked)}
              />
            </div>

            <div>
              <Label htmlFor="retention">תקופת שמירת נתונים</Label>
              <Select
                value={settings.privacy_settings.data_retention_days.toString()}
                onValueChange={(value) => handleNestedSettingChange('privacy_settings', 'data_retention_days', parseInt(value))}
              >
                <SelectTrigger className="max-w-48">
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="7">7 ימים</SelectItem>
                  <SelectItem value="30">30 ימים</SelectItem>
                  <SelectItem value="90">90 ימים</SelectItem>
                  <SelectItem value="365">שנה</SelectItem>
                </SelectContent>
              </Select>
              <p className="text-sm text-gray-500 mt-1">
                כמה זמן לשמור את נתוני השיחות שלך
              </p>
            </div>

            <div className="bg-blue-50 p-4 rounded-lg border border-blue-200">
              <div className="flex items-start gap-3">
                <Lock className="w-5 h-5 text-blue-600 mt-0.5" />
                <div>
                  <h3 className="font-semibold text-blue-900">הפרטיות שלך מוגנת</h3>
                  <p className="text-sm text-blue-800 mt-1">
                    כל השיחות מוצפנות מקצה לקצה. הנתונים לא משותפים בלי הסכמה מפורשת שלך.
                    אתה יכול למחוק את הנתונים שלך בכל עת דרך הדשבורד.
                  </p>
                </div>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Save Button */}
        <div className="flex justify-center">
          <Button
            onClick={handleSaveSettings}
            disabled={isSaving}
            className="bg-blue-600 hover:bg-blue-700 px-8 py-3"
          >
            {isSaving ? (
              <>
                <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></div>
                שומר...
              </>
            ) : (
              <>
                <Save className="w-4 h-4 mr-2" />
                שמור הגדרות
              </>
            )}
          </Button>
        </div>
      </div>
    </div>
  );
}